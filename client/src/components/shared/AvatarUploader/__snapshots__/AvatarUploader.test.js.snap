// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AvatarUploader /> renders the component consistently 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <AvatarUploader
    avatar={
        Object {
            "value": "testing",
          }
    }
    className="testing"
    onChange={[Function]}
    onError={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <label>
          Profile Picture
</label>,
        <div
          className="Avatar-uploader__preview"
>
          <div
                    className="Avatar-uploader__wrapper"
          >
                    <img
                              alt="user-avatar"
                              className="Avatar-uploader__img"
                              src="testing"
                    />
          </div>
          <input
                    accept="image/*"
                    className="Avatar-uploader__input"
                    id="profilePicture"
                    onChange={[Function]}
                    type="file"
          />
          <label
                    className="Avatar-uploader__label"
                    htmlFor="profilePicture"
          >
                    <span
                              className="User__form__btn Avatar-uploader__btn"
                    >
                              Upload New Picture
                    </span>
                    <span
                              className="Avatar-uploader__text"
                    >
                              Max 5mb, JPG, or PNG
                    </span>
          </label>
</div>,
      ],
      "className": "Avatar-uploader testing",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Profile Picture",
        },
        "ref": null,
        "rendered": "Profile Picture",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="Avatar-uploader__wrapper"
>
              <img
                            alt="user-avatar"
                            className="Avatar-uploader__img"
                            src="testing"
              />
</div>,
            <input
              accept="image/*"
              className="Avatar-uploader__input"
              id="profilePicture"
              onChange={[Function]}
              type="file"
/>,
            <label
              className="Avatar-uploader__label"
              htmlFor="profilePicture"
>
              <span
                            className="User__form__btn Avatar-uploader__btn"
              >
                            Upload New Picture
              </span>
              <span
                            className="Avatar-uploader__text"
              >
                            Max 5mb, JPG, or PNG
              </span>
</label>,
          ],
          "className": "Avatar-uploader__preview",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <img
                alt="user-avatar"
                className="Avatar-uploader__img"
                src="testing"
/>,
              "className": "Avatar-uploader__wrapper",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "alt": "user-avatar",
                "className": "Avatar-uploader__img",
                "src": "testing",
              },
              "ref": null,
              "rendered": null,
              "type": "img",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "accept": "image/*",
              "className": "Avatar-uploader__input",
              "id": "profilePicture",
              "onChange": [Function],
              "type": "file",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <span
                  className="User__form__btn Avatar-uploader__btn"
>
                  Upload New Picture
</span>,
                <span
                  className="Avatar-uploader__text"
>
                  Max 5mb, JPG, or PNG
</span>,
              ],
              "className": "Avatar-uploader__label",
              "htmlFor": "profilePicture",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Upload New Picture",
                  "className": "User__form__btn Avatar-uploader__btn",
                },
                "ref": null,
                "rendered": "Upload New Picture",
                "type": "span",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Max 5mb, JPG, or PNG",
                  "className": "Avatar-uploader__text",
                },
                "ref": null,
                "rendered": "Max 5mb, JPG, or PNG",
                "type": "span",
              },
            ],
            "type": "label",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label>
            Profile Picture
</label>,
          <div
            className="Avatar-uploader__preview"
>
            <div
                        className="Avatar-uploader__wrapper"
            >
                        <img
                                    alt="user-avatar"
                                    className="Avatar-uploader__img"
                                    src="testing"
                        />
            </div>
            <input
                        accept="image/*"
                        className="Avatar-uploader__input"
                        id="profilePicture"
                        onChange={[Function]}
                        type="file"
            />
            <label
                        className="Avatar-uploader__label"
                        htmlFor="profilePicture"
            >
                        <span
                                    className="User__form__btn Avatar-uploader__btn"
                        >
                                    Upload New Picture
                        </span>
                        <span
                                    className="Avatar-uploader__text"
                        >
                                    Max 5mb, JPG, or PNG
                        </span>
            </label>
</div>,
        ],
        "className": "Avatar-uploader testing",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Profile Picture",
          },
          "ref": null,
          "rendered": "Profile Picture",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="Avatar-uploader__wrapper"
>
                <img
                                alt="user-avatar"
                                className="Avatar-uploader__img"
                                src="testing"
                />
</div>,
              <input
                accept="image/*"
                className="Avatar-uploader__input"
                id="profilePicture"
                onChange={[Function]}
                type="file"
/>,
              <label
                className="Avatar-uploader__label"
                htmlFor="profilePicture"
>
                <span
                                className="User__form__btn Avatar-uploader__btn"
                >
                                Upload New Picture
                </span>
                <span
                                className="Avatar-uploader__text"
                >
                                Max 5mb, JPG, or PNG
                </span>
</label>,
            ],
            "className": "Avatar-uploader__preview",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <img
                  alt="user-avatar"
                  className="Avatar-uploader__img"
                  src="testing"
/>,
                "className": "Avatar-uploader__wrapper",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "user-avatar",
                  "className": "Avatar-uploader__img",
                  "src": "testing",
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "accept": "image/*",
                "className": "Avatar-uploader__input",
                "id": "profilePicture",
                "onChange": [Function],
                "type": "file",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <span
                    className="User__form__btn Avatar-uploader__btn"
>
                    Upload New Picture
</span>,
                  <span
                    className="Avatar-uploader__text"
>
                    Max 5mb, JPG, or PNG
</span>,
                ],
                "className": "Avatar-uploader__label",
                "htmlFor": "profilePicture",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Upload New Picture",
                    "className": "User__form__btn Avatar-uploader__btn",
                  },
                  "ref": null,
                  "rendered": "Upload New Picture",
                  "type": "span",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Max 5mb, JPG, or PNG",
                    "className": "Avatar-uploader__text",
                  },
                  "ref": null,
                  "rendered": "Max 5mb, JPG, or PNG",
                  "type": "span",
                },
              ],
              "type": "label",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
