// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<UserReset /> should render the component consistently 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Reset
    history={
        Object {
            "push": [Function],
          }
    }
    match={
        Object {
            "params": Object {
              "token": null,
            },
          }
    }
    setErrorState={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "button": <button
        className="user-form-button"
        type="submit"
>
        Submit
</button>,
      "children": Array [
        <FormMessage
          message=""
          type="error"
/>,
        <UserInputField
          disabled={true}
          isVisible={true}
          message="Enter new password"
          name="newPassword"
          onChange={[Function]}
          placeholder=""
          title="New Password"
          type="password"
          value=""
/>,
        <UserInputField
          disabled={true}
          isVisible={true}
          message="Confirm the new password"
          name="confirmPassword"
          onChange={[Function]}
          placeholder=""
          title="Confirm Password"
          type="password"
          value=""
/>,
      ],
      "className": "Reset",
      "disabled": false,
      "formMsg": "",
      "formTitle": "Please enter new password.",
      "icon": "refresh",
      "isLoading": true,
      "onSubmit": [Function],
      "title": "Reset Your Password",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "message": "",
          "type": "error",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": null,
          "disabled": true,
          "isVisible": true,
          "message": "Enter new password",
          "name": "newPassword",
          "onChange": [Function],
          "placeholder": "",
          "title": "New Password",
          "type": "password",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": null,
          "disabled": true,
          "isVisible": true,
          "message": "Confirm the new password",
          "name": "confirmPassword",
          "onChange": [Function],
          "placeholder": "",
          "title": "Confirm Password",
          "type": "password",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "button": <button
          className="user-form-button"
          type="submit"
>
          Submit
</button>,
        "children": Array [
          <FormMessage
            message=""
            type="error"
/>,
          <UserInputField
            disabled={true}
            isVisible={true}
            message="Enter new password"
            name="newPassword"
            onChange={[Function]}
            placeholder=""
            title="New Password"
            type="password"
            value=""
/>,
          <UserInputField
            disabled={true}
            isVisible={true}
            message="Confirm the new password"
            name="confirmPassword"
            onChange={[Function]}
            placeholder=""
            title="Confirm Password"
            type="password"
            value=""
/>,
        ],
        "className": "Reset",
        "disabled": false,
        "formMsg": "",
        "formTitle": "Please enter new password.",
        "icon": "refresh",
        "isLoading": true,
        "onSubmit": [Function],
        "title": "Reset Your Password",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "message": "",
            "type": "error",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": null,
            "disabled": true,
            "isVisible": true,
            "message": "Enter new password",
            "name": "newPassword",
            "onChange": [Function],
            "placeholder": "",
            "title": "New Password",
            "type": "password",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": null,
            "disabled": true,
            "isVisible": true,
            "message": "Confirm the new password",
            "name": "confirmPassword",
            "onChange": [Function],
            "placeholder": "",
            "title": "Confirm Password",
            "type": "password",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
